name: Build Wheels

on:
  push:
    tags: ['v*']
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          CIBW_BUILD: cp38-* cp39-* cp310-* cp311-* cp312-*
          CIBW_SKIP: pp* *-musllinux*
          CIBW_ARCHS_LINUX: auto
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_ARCHS_WINDOWS: auto
          
          # 简化的依赖安装
          CIBW_BEFORE_ALL_LINUX: |
            yum install -y cmake gcc-c++ || apt-get update && apt-get install -y cmake g++
          CIBW_BEFORE_ALL_MACOS: |
            brew install cmake
          CIBW_BEFORE_ALL_WINDOWS: |
            choco install cmake
          
          # 简单的测试
          CIBW_TEST_COMMAND: |
            python -c "from dicube.codecs.jph import JPHCodec; print('✓ Import test passed')"

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/setup-python-env
        with:
          python-version: '3.9'

      - name: Build sdist
        run: |
          pip install build
          python -m build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz 